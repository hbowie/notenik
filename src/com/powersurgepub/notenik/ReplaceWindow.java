/*
 * Copyright 2009 - 2014 Herb Bowie
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.powersurgepub.notenik;

  import com.powersurgepub.psutils.*;

/**
 A window for performing a find and replace operation. 

 @author Herb Bowie
 */
public class ReplaceWindow 
  extends javax.swing.JFrame 
    implements WindowToManage {
  
  private NotenikMainFrame mainFrame;

  /** Creates new form ReplaceWindow */
  public ReplaceWindow(NotenikMainFrame mainFrame) {
    initComponents();
    this.mainFrame = mainFrame;
  }
  
  public void startReplace (String findString) {
    if (findString.length() > 0) {
      findTextField.setText(findString);
    }
  }
  
  public void noFindInProgress() {
    setFindButtonText(NotenikMainFrame.FIND);
    replaceButton.setEnabled(false);
    replaceAndFindButton.setEnabled(false);
  }
  
  public void findInProgress() {
    setFindButtonText(NotenikMainFrame.FIND_AGAIN);
    replaceButton.setEnabled(true);
    replaceAndFindButton.setEnabled(true);
  }
  
  public void setFindButtonText(String findButtonText) {
    findButton.setText(findButtonText);
  }
  
  private void resetFindButton() {
    mainFrame.noFindInProgress();
  }
  
  private void replaceAndFind() {
    replace();
    find();
  }
  
  private void find() {
    mainFrame.setFindText(findTextField.getText());
    mainFrame.findNote(
        findButton.getText(),
        findTextField.getText(),
        titleSelected(),
        linkSelected(),
        tagsSelected(),
        bodySelected(),
        caseSensitive(),
        true);
  }
  
  private void replace() {
    mainFrame.replaceNote(findTextField.getText(), replaceTextField.getText(),
        titleSelected(),
        linkSelected(),
        tagsSelected(),
        bodySelected());
  }
  
  public boolean titleSelected() {
    return titleCheckBox.isSelected();
  }
  
  public boolean linkSelected() {
    return linkCheckBox.isSelected();
  }
  
  public boolean tagsSelected() {
    return tagsCheckBox.isSelected();
  }
  
  public boolean bodySelected() {
    return bodyCheckBox.isSelected();
  }
  
  public boolean caseSensitive() {
    return caseSensitiveCheckBox.isSelected();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    findLabel = new javax.swing.JLabel();
    findTextField = new javax.swing.JTextField();
    replaceLabel = new javax.swing.JLabel();
    replaceTextField = new javax.swing.JTextField();
    titleCheckBox = new javax.swing.JCheckBox();
    linkCheckBox = new javax.swing.JCheckBox();
    tagsCheckBox = new javax.swing.JCheckBox();
    bodyCheckBox = new javax.swing.JCheckBox();
    findButton = new javax.swing.JButton();
    replaceButton = new javax.swing.JButton();
    replaceAndFindButton = new javax.swing.JButton();
    replaceAllButton = new javax.swing.JButton();
    fillerLabel = new javax.swing.JLabel();
    caseSensitiveCheckBox = new javax.swing.JCheckBox();

    setTitle("URL Union Find and Replace");
    getContentPane().setLayout(new java.awt.GridBagLayout());

    findLabel.setText("Find:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(findLabel, gridBagConstraints);

    findTextField.setColumns(40);
    findTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        findTextFieldActionPerformed(evt);
      }
    });
    findTextField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyTyped(java.awt.event.KeyEvent evt) {
        findTextFieldKeyTyped(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(findTextField, gridBagConstraints);

    replaceLabel.setText("Replace:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(replaceLabel, gridBagConstraints);

    replaceTextField.setColumns(40);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(replaceTextField, gridBagConstraints);

    titleCheckBox.setSelected(true);
    titleCheckBox.setText("Title");
    titleCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        titleCheckBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(titleCheckBox, gridBagConstraints);

    linkCheckBox.setSelected(true);
    linkCheckBox.setText("Link");
    linkCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        linkCheckBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(linkCheckBox, gridBagConstraints);

    tagsCheckBox.setSelected(true);
    tagsCheckBox.setText("Tags");
    tagsCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tagsCheckBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(tagsCheckBox, gridBagConstraints);

    bodyCheckBox.setSelected(true);
    bodyCheckBox.setText("Body");
    bodyCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bodyCheckBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(bodyCheckBox, gridBagConstraints);

    findButton.setText("Find");
    findButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        findButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(findButton, gridBagConstraints);

    replaceButton.setText("Replace");
    replaceButton.setEnabled(false);
    replaceButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        replaceButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(replaceButton, gridBagConstraints);

    replaceAndFindButton.setText("Replace & Find");
    replaceAndFindButton.setEnabled(false);
    replaceAndFindButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        replaceAndFindButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(replaceAndFindButton, gridBagConstraints);

    replaceAllButton.setText("Replace All");
    replaceAllButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        replaceAllButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(replaceAllButton, gridBagConstraints);

    fillerLabel.setText(" ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(fillerLabel, gridBagConstraints);

    caseSensitiveCheckBox.setText("Case sensitive");
    caseSensitiveCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        caseSensitiveCheckBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    getContentPane().add(caseSensitiveCheckBox, gridBagConstraints);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void replaceAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceAllButtonActionPerformed
    mainFrame.replaceAll(findTextField.getText(), replaceTextField.getText(),
        titleCheckBox.isSelected(),
        linkCheckBox.isSelected(),
        tagsCheckBox.isSelected(),
        bodyCheckBox.isSelected(),
        true);
    setVisible(false);
  }//GEN-LAST:event_replaceAllButtonActionPerformed

  private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
    find();
  }//GEN-LAST:event_findButtonActionPerformed

  private void findTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextFieldKeyTyped
    if (! findTextField.getText().equals (mainFrame.getLastTextFound())) {
      resetFindButton();
    }
  }//GEN-LAST:event_findTextFieldKeyTyped

  private void findTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTextFieldActionPerformed
    find();
  }//GEN-LAST:event_findTextFieldActionPerformed

  private void caseSensitiveCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caseSensitiveCheckBoxActionPerformed
    resetFindButton();
  }//GEN-LAST:event_caseSensitiveCheckBoxActionPerformed

  private void titleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleCheckBoxActionPerformed
    resetFindButton();
  }//GEN-LAST:event_titleCheckBoxActionPerformed

  private void linkCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkCheckBoxActionPerformed
    resetFindButton();
  }//GEN-LAST:event_linkCheckBoxActionPerformed

  private void tagsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagsCheckBoxActionPerformed
    resetFindButton();
  }//GEN-LAST:event_tagsCheckBoxActionPerformed

  private void bodyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodyCheckBoxActionPerformed
    resetFindButton();
  }//GEN-LAST:event_bodyCheckBoxActionPerformed

  private void replaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceButtonActionPerformed
    replace();
  }//GEN-LAST:event_replaceButtonActionPerformed

  private void replaceAndFindButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceAndFindButtonActionPerformed
    replaceAndFind();
  }//GEN-LAST:event_replaceAndFindButtonActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox bodyCheckBox;
  private javax.swing.JCheckBox caseSensitiveCheckBox;
  private javax.swing.JLabel fillerLabel;
  private javax.swing.JButton findButton;
  private javax.swing.JLabel findLabel;
  private javax.swing.JTextField findTextField;
  private javax.swing.JCheckBox linkCheckBox;
  private javax.swing.JButton replaceAllButton;
  private javax.swing.JButton replaceAndFindButton;
  private javax.swing.JButton replaceButton;
  private javax.swing.JLabel replaceLabel;
  private javax.swing.JTextField replaceTextField;
  private javax.swing.JCheckBox tagsCheckBox;
  private javax.swing.JCheckBox titleCheckBox;
  // End of variables declaration//GEN-END:variables
}
